version: "3.9"

services:
  api:
    build: .
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@db:5432/mvp
      - MINIO_ENDPOINT=http://minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - SIGN_SERVICE=http://sign-mock:8080
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_started
      sign-mock:
        condition: service_started

  go-api:
    build: ./backend
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_started
      sign-mock:
        condition: service_started

  db:
    image: postgres:15
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=mvp
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 3s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"

  sign-mock:
    image: hashicorp/http-echo
    command: ["-text=OK"]
    ports:
      - "8080:8080"

  frontend:
    build: ./frontend
    ports:
    - "3000:80"
    depends_on:
      api:
        condition: service_started

  flutter-web:
    build: ./frontend_flutter
    ports:
      - "8081:80"
    depends_on:
      go-api:
        condition: service_started
